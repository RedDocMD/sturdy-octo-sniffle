<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Google Summer of Code 2021</title><link>https://reddocmd.github.io/sturdy-octo-sniffle/</link><description>Recent content on Google Summer of Code 2021</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reddocmd.github.io/sturdy-octo-sniffle/index.xml" rel="self" type="application/rss+xml"/><item><title>Proposal</title><link>https://reddocmd.github.io/sturdy-octo-sniffle/docs/proposal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reddocmd.github.io/sturdy-octo-sniffle/docs/proposal/</guid><description>Proposal for &amp;ldquo;Making Smart Pointer Checkers default checkers in the Static Analyzer&amp;rdquo; # Information # Name: Deep Majumder Email: deep.majumder2019@gmail.com Problem Statement # The Clang Static Analyzer contains a SmartPtrChecker for catching null smart pointer dereference bugs. The data it uses to figure out such cases comes from the SmartPtrModelling checker, which models how a smart pointer behaves. This way, the Static Analyzer can find these bugs without accessing the source code for C++ standard library smart pointers.</description></item><item><title>Final Report</title><link>https://reddocmd.github.io/sturdy-octo-sniffle/docs/report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reddocmd.github.io/sturdy-octo-sniffle/docs/report/</guid><description>Making Smart Pointer Checkers default checkers in the Static Analyzer # Information # Name: Deep Majumder Email: deep.majumder2019@gmail.com Mentors: Artem Dergachev, Valeriy Savchenko, Gábor Horváth, Raphael Isemann Patches: On Github (if this link is broken, please use the following search term on Github: repo:llvm/llvm-project author:RedDocMD author-date:2021-05-17..2021-08-23) Overview # This project aims to complete the SmartPtrChecker and thus SmartPtrModeling checkers to detect null-dereferences of the std::unique_ptr. This is a continuation of the GSoC 2020 project in the same area.</description></item></channel></rss>